model Team {
  id            String    @id @default(cuid())
  name          String
  tag           String?
  averageLevel  Float     @default(0)
  totalPower    Int       @default(0)
  teamChemistry Int       @default(50)
  isActive      Boolean   @default(true)
  wins          Int       @default(0)
  losses        Int       @default(0)

  captainId String? @unique
  captain   Character? @relation("TeamCaptain", fields: [captainId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  guildId String
  ownerId String

  guild  Guild  @relation(fields: [guildId], references: [id], onDelete: Cascade)
  owner  Member @relation("TeamOwner", fields: [ownerId], references: [id])

  members      TeamMember[]
  homeMatches  Match[] @relation("HomeTeam")
  awayMatches  Match[] @relation("AwayTeam")

  @@map("teams")
}

model TeamMember {
  id          String   @id @default(cuid())
  position    Position
  isStarter   Boolean  @default(false)
  joinedAt    DateTime @default(now())
  chemistry   Int      @default(50)

  teamId      String
  characterId String

  team      Team      @relation(fields: [teamId], references: [id], onDelete: Cascade)
  character Character @relation(fields: [characterId], references: [id], onDelete: Cascade)

  @@unique([teamId, characterId])
  @@map("team_members")
}
